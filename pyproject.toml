[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "coreax"
dynamic = ["version"]
description = "Jax coreset algorithms."
readme = "README.md"
requires-python = ">=3.9"
keywords = [
    "coreset",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
]
license = {file = "LICENSE"}
authors = [
    {name = "GCHQ", email = "oss@gchq.gov.uk"},
]
dependencies = [
    "equinox",
    "flax",
    "jax",
    "jaxopt",
    "optax",
    "scikit-learn",
    "tqdm",
    "typing-extensions",
]

[project.optional-dependencies]
# These match the suffixes on the various requirements-*.txt files
# Run unit tests with coverage assessment
test = [
    "imageio",
    "matplotlib",
    "numpy",
    "opencv-python",
    "pyqt5",
    "pytest-cov",
    "pytest-rerunfailures",
    "scipy",
]
# Compile documentation
doc = [
    "furo",
    "sphinx",
    "sphinx-autodoc-typehints",
    "sphinx-toolbox",
    "sphinxcontrib-bibtex",
    "sphobjinv",
]
# All tools for a developer including those for running pylint
dev = [
    "coreax[doc, test]",
    "pre-commit>=3.7",
    "pylint",
    "pyroma",
    "pyright",
    "ruff",
]

[project.urls]
Documentation = "https://coreax.readthedocs.io/en/latest/"
Repository = "https://github.com/gchq/coreax"
Issues = "https://github.com/gchq/coreax/issues"
Changelog = "https://github.com/gchq/coreax/blob/main/CHANGELOG.md"

[tool.setuptools]
packages = ["coreax"]

[tool.setuptools.dynamic]
version = {attr = "coreax.__version__"}

[tool.ruff]
src = [".", "examples"]

[tool.ruff.lint]
preview = true
select = [
    "B",      # flake8-bugbear
    "C90",    # McCabe
    "D",      # pydocstyle
    "E",      # pycodestyle [error]
    "F",      # pyflakes
    "G010",   # logging-warn
    "I",      # isort
    "N",      # pep8-naming
    "PGH005", # invalid-mock-access
    "PL",     # pylint
    "S102",   # exec-builtin
    "S307",   # suspicious-eval-usage
    "W",      # pycodestyle [warning]
]

ignore = [
    # Incompatible with ruff format
    "D206",   # indent-with-spaces
    "E111",   # indentation-with-invalid-multiple
    "E114",   # indentation-with-invalid-multiple-comment
    "E117",   # over-indented
    "W191",   # tab-indentation
    # Incompatible with other pydocstyle rules
    "D203",   # one-blank-line-before-class
    "D212",   # multi-line-summary-first-line
    # Opinionated ignores
    "PLR6301", # no-self-use (opinionated)
    # Incompatible with jaxtyping
    "F722",   # forward-annotation-syntax-error
]

[tool.ruff.lint.per-file-ignores]
"coreax/__init__.py" = ["F401"]
"documentation/source/conf.py" = ["E402"]
"documentation/source/snippets/*" = ["D100", "F821"]
"examples/*" = ["PLR0914", "PLR0915"]
"tests/*" = ["D102", "D200", "PLR0904"]

[tool.ruff.lint.pylint]
max-args = 10
max-locals = 20
allow-dunder-method-names = ["__check_init__", "__jax_array__"]

[tool.coverage.run]
command_line = "-m pytest tests/unit --cov"
branch = true
relative_files = true
source = ["coreax"]

[tool.coverage.report]
show_missing = true
sort = "Cover"
exclude_also = [
    "pass",
    "raise RuntimeError",
    "if TYPE_CHECKING:",
    "raise$",
]
